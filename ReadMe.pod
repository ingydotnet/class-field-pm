=pod

=for comment
DO NOT EDIT. This Pod was generated by Swim v0.1.46.
See http://github.com/ingydotnet/swim-pm#readme

=encoding utf8

=head1 Name

Class::Field - Class Field Accessor Generator

=head1 Version

This document describes L<Class::Field> version B<0.24>.

=head1 Synopsis

    package Thing;
    use Class::Field qw'field const';

    field 'this';
    field 'list' => [];
    field 'map' => {};
    field 'that', -init => '$self->setup_that';
    field 'circular_ref' => -weaken;
    const 'answer' => 42;

=head1 Description

Class::Field exports two subroutines, C<field> and C<const>. These functions
are used to declare fields and constants in your class.

Class::Field generates custom code for each accessor that is optimized
for speed.

=head1 Functions

=over

=item C<field>

Defines accessor methods for a field of your class:

    package Example;
    use base 'Parent';
    use Class::Field qw'field const';

    field 'foo';
    field bar => [];

    sub lalala {
        my $self = shift;
        $self->foo(42);
        push @{$self->{bar}}, $self->foo;
    }

The first parameter passed to C<field> is the name of the attribute being
defined. Accessors can be given an optional default value. This value will be
returned if no value for the field has been set in the object.

=item C<const>

    const bar => 42;

The C<const> function is similar to <field> except that it is immutable.
It also does not store data in the object. You probably always want to
give a C<const> a default value, otherwise the generated method will be
somewhat useless.

=back

=head1 Note

This code was taken directly out the Spiffy module for those people who just
want this functionality without using the rest of Spiffy.

=head1 Author

Ingy döt Net <ingy@cpan.org>

=head1 Copyright and License

Copyright 2006-2019. Ingy döt Net.

This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

See L<http://www.perl.com/perl/misc/Artistic.html>

=cut
